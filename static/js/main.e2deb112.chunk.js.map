{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","deck","phand","dhand","pvalue","dvalue","pwins","dwins","index","shuffleapi","drawapi1","drawapi2","testapi","playing","dbust","pw","dw","assignvalues","n","length","i","c","value","Number","openingdeal","pv","setState","e","alert","console","log","loser","bust","dv","output","push","winnerwinner","hit","newcard","newcardv","concat","stand","counter","fetch","this","then","response","json","shuffled","deckID","deck_id","res","cards","className","style","backgroundColor","padding","backroundColor","type","background","borderColor","onClick","color","fontWeight","src","image","backgroundcolor","size","shape","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"wRAsReA,E,4MA5QbC,MAAQ,CACNC,KAAO,GACPC,MAAQ,GACRC,MAAO,GACPC,OAAS,EACTC,OAAS,EACTC,MAAQ,EACRC,MAAQ,EACRC,MAAQ,EACRC,WAAa,iEACbC,SAAW,uCACXC,SAAW,kBACXC,QAAU,kEACVC,SAAU,EACVC,OAAO,EACPC,GAAI,gBACJC,GAAI,iB,EAoBNC,aAAe,SAAChB,GAEd,IADA,IAAIiB,EAAIjB,EAAKkB,OACJC,EAAE,EAAGA,EAAEF,EAAGE,IAAK,CACtB,IAAIC,EAAIpB,EAAKmB,GAAGE,MACN,SAAND,GAAsB,UAANA,GAAsB,SAALA,EACnCA,EAAI,KAGS,QAANA,IACPA,EAAI,MAGNpB,EAAKmB,GAAGE,MAAQC,OAAOF,GAGzB,OAAOpB,G,EAKTuB,YAAc,WAEV,IACA,EAAKP,aAAc,EAAKjB,MAAMC,MAC9B,IAAIwB,EAAK,EAAKzB,MAAMC,KAAK,EAAKD,MAAMQ,OAAOc,MAAQ,EAAKtB,MAAMC,KAAK,EAAKD,MAAMQ,MAAM,GAAGc,MACvF,EAAKI,SAAS,CACZxB,MAAQ,CAAC,EAAKF,MAAMC,KAAK,EAAKD,MAAMQ,OAAO,EAAKR,MAAMC,KAAK,EAAKD,MAAMQ,MAAM,IAC5EL,MAAQ,CAAC,EAAKH,MAAMC,KAAK,EAAKD,MAAMQ,MAAM,IAC1CA,MAAQ,EAAKR,MAAMQ,MAAQ,EAC3BK,SAAU,EACVR,OAAS,EAAKL,MAAMC,KAAK,EAAKD,MAAMQ,MAAM,GAAGc,QAEpC,KAAPG,EACF,EAAKC,SAAS,CACZtB,OAAS,KAIX,EAAKsB,SAAS,CACZtB,OAAQqB,IAId,MAAME,GACJC,MAAM,iCACNC,QAAQC,IAAI,EAAK9B,MAAMC,MACvB4B,QAAQC,IAAI,EAAK9B,MAAMQ,S,EAI3BuB,MAAQ,SAACC,EAAMC,EAAIR,GACjB,GAAIO,EAAM,CAERJ,MADa,mBAAqBH,EAAK,mBAGpC,CACH,IAAIS,EAAS,WAAaD,EAAK,YAAc,EAAKjC,MAAMI,OAAS,cACjEwB,MAAMM,GAER,EAAKR,SAAS,CACZnB,MAAQ,EAAKP,MAAMO,MAAQ,EAC3BL,MAAQ,GACRC,MAAQ,GACRC,OAAS,EACTC,OAAS,EACTQ,SAAS,EACTC,OAAO,IAGT,EAAKU,e,EAIPW,KAAO,SAACF,GACN,IAAIC,EAAS,WAAaD,EAAK,YAAc,EAAKjC,MAAMI,OAAS,cACjEwB,MAAMM,GACN,EAAKR,SAAS,CACZxB,MAAQ,GACRC,MAAQ,GACRC,OAAS,EACTC,OAAS,EACTQ,SAAU,EACVC,OAAO,IAET,EAAKU,e,EAGPY,aAAc,SAACtB,EAAOmB,GACpB,GAAInB,EAAO,CAETc,MADa,sBAAwBK,EAAK,kBAGvC,CACH,IAAIC,EAAS,WAAaD,EAAK,YAAc,EAAKjC,MAAMI,OAAS,aACjEwB,MAAMM,GAER,EAAKR,SAAS,CACZpB,MAAQ,EAAKN,MAAMM,MAAQ,EAC3BJ,MAAQ,GACRC,MAAQ,GACRC,OAAS,EACTC,OAAS,EACTQ,SAAS,EACTC,OAAO,IAGT,EAAKU,e,EAKPa,IAAM,WACJ,EAAKpB,aAAc,EAAKjB,MAAMC,MAC9B,IAAIO,EAAQ,EAAKR,MAAMQ,MACnB8B,EAAU,EAAKtC,MAAMC,KAAKO,GAC1B+B,EAAWD,EAAQhB,MACnB,EAAKtB,MAAMI,OAAS,IAAmB,KAAbmC,IAC5BA,EAAW,GAEb,EAAKb,SAAS,CACZxB,MAAQ,EAAKF,MAAME,MAAMsC,OAAOF,GAChC9B,MAAQA,EAAQ,IAEV,EAAKR,MAAME,MAAMiB,OAAzB,IAEIM,EAAK,EAAKzB,MAAMI,OAASmC,EAEzBd,EAAK,GACP,EAAKM,OAFI,EAEQ,EAAGN,GAGtB,EAAKC,SAAS,CACZtB,OAASqB,K,EAIbgB,MAAQ,WAMN,IALA,IAAIjC,EAAQ,EAAKR,MAAMQ,MACnBH,EAAS,EAAKL,MAAMK,OACpBD,EAAS,EAAKJ,MAAMI,OACpBD,EAAQ,EAAKH,MAAMG,MACnBuC,EAAU,EACPrC,EAAS,IACZ,EAAKqB,SAAS,CACZvB,MAAQA,EAAMqC,OAAO,EAAKxC,MAAMC,KAAKO,EAAQkC,IAC7CrC,OAAQA,GAAU,EAAKL,MAAMC,KAAKO,EAAQkC,GAASpB,QAEpDoB,GAAW,EAEhB,GAAIrC,EAAS,GAAI,CAEf,EAAK+B,cADO,EACa/B,QAElBA,EAASD,EAChB,EAAKgC,cAAa,EAAO/B,GAElBA,EAASD,EAChB,EAAK2B,OAAM,EAAO1B,EAAQ,GAI3B,EAAK8B,KAAK9B,GAEX,EAAKqB,SAAS,CACZlB,MAAQA,GAASkC,EAAU,M,kEArLT,IAAD,OACnBC,MAAMC,KAAK5C,MAAMS,YAAYoC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACtDF,MAAK,SAAAG,GACJ,IAAIC,EAASD,EAASE,QACtBrB,QAAQC,IAAImB,GACZN,MAAM,uCAAwCM,EAAS,mBACtDJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MACC,SAAAM,GACE,EAAKzB,SAAS,CACZzB,KAAMkD,EAAIC,gB,+BAkLV,IAAD,OAEP,OADAvB,QAAQC,IAAIc,KAAK5C,OAEf,yBAAKqD,UAAW,MAAMC,MAAS,CAACC,gBAAiB,YACjD,yBAAKD,MAAS,CAACE,QAAS,GAAIC,eAAgB,YAA5C,KACA,yBAAKH,MAAS,CAACG,eAAgB,UAAWD,QAAS,KAAnD,KAA2DZ,KAAK5C,MAAMa,SAAW,kBAAC,IAAD,CAAQ6C,KAAM,UAAUJ,MAAS,CAACK,WAAa,UAAWC,YAAa,WAAYC,QAAW,WAAM,EAAKrC,gBAAzG,gBAAjF,KAEE,yBAAK8B,MAAS,CAACC,gBAAiB,YAC9B,0BAAMD,MAAS,CAACQ,MAAO,UAAWC,WAAa,OAAQR,gBAAkB,UAAWC,QAAS,IAA7F,IAAmGZ,KAAK5C,MAAMa,SAAW+B,KAAK5C,MAAMe,GAApI,IAAyI6B,KAAK5C,MAAMa,SAAW+B,KAAK5C,MAAMM,MAA1K,MAIF,yBAAKgD,MAAS,CAACE,QAAS,EAAGC,eAAgB,YACzC,0BAAMH,MAAS,CAACC,gBAAkB,YACjCX,KAAK5C,MAAMa,SAAY,yBAAKmD,IAAOpB,KAAK5C,MAAME,MAAM,GAAG+D,QACvDrB,KAAK5C,MAAMa,SAAW,yBAAKmD,IAAOpB,KAAK5C,MAAME,MAAM,GAAG+D,QACtDrB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAME,MAAM,IAAM,yBAAK8D,IAAOpB,KAAK5C,MAAME,MAAM,GAAG+D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAME,MAAM,IAAM,yBAAK8D,IAAOpB,KAAK5C,MAAME,MAAM,GAAG+D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAME,MAAM,IAAM,yBAAK8D,IAAOpB,KAAK5C,MAAME,MAAM,GAAG+D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAME,MAAM,IAAM,yBAAK8D,IAAOpB,KAAK5C,MAAME,MAAM,GAAG+D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAME,MAAM,IAAM,yBAAK8D,IAAOpB,KAAK5C,MAAME,MAAM,GAAG+D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAME,MAAM,IAAM,yBAAK8D,IAAOpB,KAAK5C,MAAME,MAAM,GAAG+D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAME,MAAM,IAAM,yBAAK8D,IAAOpB,KAAK5C,MAAME,MAAM,GAAG+D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAME,MAAM,IAAM,yBAAK8D,IAAOpB,KAAK5C,MAAME,MAAM,GAAG+D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAME,MAAM,KAAO,yBAAK8D,IAAOpB,KAAK5C,MAAME,MAAM,IAAI+D,UAInF,yBAAKX,MAAS,CAACE,QAAS,GAAIU,gBAAiB,YAA7C,KAEA,yBAAKZ,MAAS,CAACG,eAAgB,UAAWD,QAAS,KAAnD,IAA0DZ,KAAK5C,MAAMa,SAAW,kBAAC,IAAD,CAAQ6C,KAAM,UAAUJ,MAAS,CAACK,WAAa,UAAWC,YAAa,WAAYO,KAAO,QAAQC,MAAQ,QAAQP,QAAW,WAAM,EAAKxB,QAAxI,SAAhF,IAAiPO,KAAK5C,MAAMa,SAAW,kBAAC,IAAD,CAAQ6C,KAAM,UAAUJ,MAAS,CAACK,WAAa,UAAWC,YAAa,WAAYO,KAAO,QAAQC,MAAQ,QAAQP,QAAW,WAAM,EAAKpB,UAAxI,WAAvQ,MAEA,yBAAKa,MAAS,CAACE,QAAS,GAAIU,gBAAiB,YAA7C,KAEA,yBAAKZ,MAAS,CAACE,QAAS,EAAGU,gBAAiB,YAC1C,0BAAMZ,MAAS,CAACC,gBAAkB,YACjCX,KAAK5C,MAAMa,SAAW,yBAAKmD,IAAOpB,KAAK5C,MAAMG,MAAM,GAAG8D,QACtDrB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAMG,MAAM,IAAM,yBAAK6D,IAAOpB,KAAK5C,MAAMG,MAAM,GAAG8D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAMG,MAAM,IAAM,yBAAK6D,IAAOpB,KAAK5C,MAAMG,MAAM,GAAG8D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAMG,MAAM,IAAM,yBAAK6D,IAAOpB,KAAK5C,MAAMG,MAAM,GAAG8D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAMG,MAAM,IAAM,yBAAK6D,IAAOpB,KAAK5C,MAAMG,MAAM,GAAG8D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAMG,MAAM,IAAM,yBAAK6D,IAAOpB,KAAK5C,MAAMG,MAAM,GAAG8D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAMG,MAAM,IAAM,yBAAK6D,IAAOpB,KAAK5C,MAAMG,MAAM,GAAG8D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAMG,MAAM,IAAM,yBAAK6D,IAAOpB,KAAK5C,MAAMG,MAAM,GAAG8D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAMG,MAAM,IAAM,yBAAK6D,IAAOpB,KAAK5C,MAAMG,MAAM,GAAG8D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAMG,MAAM,IAAM,yBAAK6D,IAAOpB,KAAK5C,MAAMG,MAAM,GAAG8D,QAC9ErB,KAAK5C,MAAMa,SAAY+B,KAAK5C,MAAMG,MAAM,KAAO,yBAAK6D,IAAOpB,KAAK5C,MAAMG,MAAM,IAAI8D,UAIlF,yBAAKX,MAAS,CAACC,gBAAiB,YAC9B,0BAAMD,MAAS,CAACQ,MAAQ,UAAUC,WAAa,OAAQN,eAAgB,UAAWD,QAAU,IAA5F,IAAkGZ,KAAK5C,MAAMa,SAAW+B,KAAK5C,MAAMgB,GAAnI,IAAwI4B,KAAK5C,MAAMa,SAAW+B,KAAK5C,MAAMO,MAAzK,W,GApQO8D,aCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrC,MAAK,SAAAsC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzD,QAAQyD,MAAMA,EAAMC,c","file":"static/js/main.e2deb112.chunk.js","sourcesContent":["/*\nCreated a blackjack app using React.js\n*/\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Button, Input, Typography } from \"antd\";\n\nclass App extends Component {\n  \n  state = {\n    deck : [],\n    phand : [],\n    dhand :[],\n    pvalue : 0,\n    dvalue : 0,\n    pwins : 0,\n    dwins : 0,\n    index : 0,\n    shuffleapi : \"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=20\",\n    drawapi1 : \"https://deckofcardsapi.com/api/deck/\",\n    drawapi2 : \"/draw/?count=52\",\n    testapi : \"https://deckofcardsapi.com/api/deck/71zw1u3g22po/draw/?count=52\",\n    playing : false,\n    dbust: false,\n    pw: \"Player Wins: \",\n    dw: \"Dealer Wins: \"\n\n  }     \n  componentDidMount () {\n    fetch(this.state.shuffleapi).then(response => response.json())\n    .then(shuffled =>{\n      let deckID = shuffled.deck_id\n      console.log(deckID)\n      fetch(\"https://deckofcardsapi.com/api/deck/\"+ deckID + \"/draw/?count=52\")\n      .then(response => response.json())\n      .then(\n        res => {\n          this.setState({   \n            deck: res.cards,\n          })\n        }\n      )})\n  \n      }\n\n  assignvalues = (deck) => {\n    let n = deck.length\n    for (let i=0; i<n; i++) {\n      let c = deck[i].value \n      if (c === \"KING\" || c === \"QUEEN\" || c=== \"JACK\" ) {\n        c = '10'\n       \n        }\n      else if (c === \"ACE\") {\n        c = '11'\n\n      }\n      deck[i].value = Number(c)\n      }\n      \n    return deck\n    }\n  \n\n  \n  openingdeal = () => {\n      \n      try{\n      this.assignvalues (this.state.deck)\n      let pv = this.state.deck[this.state.index].value + this.state.deck[this.state.index+1].value\n      this.setState({\n        phand : [this.state.deck[this.state.index],this.state.deck[this.state.index+1]],  \n        dhand : [this.state.deck[this.state.index+2]],\n        index : this.state.index + 4,\n        playing : true, \n        dvalue : this.state.deck[this.state.index+2].value,\n      })\n      if (pv === 22) {\n        this.setState({\n          pvalue : 12\n        })\n      }\n      else {\n        this.setState({\n          pvalue: pv\n        })\n      }\n    }\n    catch(e) {\n      alert(\"Empty Deck. Please Try Again.\")\n      console.log(this.state.deck)\n      console.log(this.state.index)\n    }\n    }\n  \n  loser = (bust, dv, pv)=>{\n    if (bust) {\n      let output = \"You busted with \" + pv + \". You Lose!\"\n      alert(output)\n    }\n    else {\n      let output = \"Dealer: \" + dv + \" Player: \" + this.state.pvalue + \". You Lose!\"\n      alert(output)\n    }\n    this.setState({\n      dwins : this.state.dwins + 1,\n      phand : [],\n      dhand : [],\n      pvalue : 0,\n      dvalue : 0,\n      playing: false,\n      dbust: false\n    })\n  \n    this.openingdeal()\n\n  }\n  \n  push = (dv) => {\n    let output = \"Dealer: \" + dv + \" Player: \" + this.state.pvalue + \". No Blood.\"\n    alert(output)\n    this.setState({\n      phand : [],\n      dhand : [],\n      pvalue : 0,\n      dvalue : 0,\n      playing : false,\n      dbust: false\n    })\n    this.openingdeal()\n  }\n\n  winnerwinner =(dbust, dv)=>{\n    if (dbust) {\n      let output = \"Dealer Busted with \" + dv + \". You Win!\"\n      alert(output)\n    }\n    else {\n      let output = \"Dealer: \" + dv + \" Player: \" + this.state.pvalue + \". You Win!\"\n      alert(output)\n    }\n    this.setState({\n      pwins : this.state.pwins + 1,\n      phand : [], \n      dhand : [],\n      pvalue : 0,\n      dvalue : 0,\n      playing: false,\n      dbust: false\n    })\n\n    this.openingdeal()\n\n  }\n  \n\n  hit = () => {\n    this.assignvalues (this.state.deck)\n    let index = this.state.index\n    let newcard = this.state.deck[index]\n    let newcardv = newcard.value \n    if (this.state.pvalue > 10 && newcardv === 11) {\n      newcardv = 1\n    }\n    this.setState({\n      phand : this.state.phand.concat(newcard),\n      index : index + 1\n    })\n    let n = this.state.phand.length\n\n    let pv = this.state.pvalue + newcardv\n    let bust = true\n    if (pv > 21) {\n      this.loser(bust, 0, pv)\n    }\n    else\n    this.setState({\n      pvalue : pv\n      })\n  }\n\n  stand = () => {\n    let index = this.state.index\n    let dvalue = this.state.dvalue\n    let pvalue = this.state.pvalue\n    let dhand = this.state.dhand \n    let counter = 1\n    while (dvalue < 17) {\n        this.setState({ \n          dhand : dhand.concat(this.state.deck[index + counter]),\n          dvalue: dvalue += this.state.deck[index + counter].value\n         })\n         counter += 1\n    } \n    if (dvalue > 21) {\n      let dbust = true\n      this.winnerwinner(dbust, dvalue)\n    }\n    else if (dvalue < pvalue) {\n      this.winnerwinner(false, dvalue)\n    } \n    else if (dvalue > pvalue) {\n      this.loser(false, dvalue, 0)\n    }\n  \n    else \n     this.push(dvalue)\n\n    this.setState({\n      index : index + (counter - 1)\n    })\n\n\n}\n\n  \n  render() {\n    console.log(this.state)\n    return (\n      <div className =\"App\" style = {{backgroundColor: '#121212'}}>\n      <div style = {{padding: 25, backroundColor: \"#121212\"}}> </div>\n      <div style = {{backroundColor: \"#121212\", padding: 25}}> {!this.state.playing && <Button type =\"primary\" style = {{background : \"#3700B3\", borderColor: \"#3700B3\"}} onClick = {()=> {this.openingdeal()}}> Start Game </Button>} </div>\n     \n        <div style = {{backgroundColor: '#121212'}}>\n          <body style = {{color: \"#bebebe\", fontWeight : \"bold\", backgroundColor : \"#121212\", padding: 5}}> {this.state.playing && this.state.pw} {this.state.playing && this.state.pwins} </body>\n        </div>\n       \n\n        <div style = {{padding: 5, backroundColor: \"#121212\"}}>\n          <body style = {{backgroundColor : \"#121212\"}}>            \n          {this.state.playing &&  <img src = {this.state.phand[0].image}/> }\n          {this.state.playing && <img src = {this.state.phand[1].image}/>}\n          {this.state.playing &&  this.state.phand[2] && <img src = {this.state.phand[2].image}/>}\n          {this.state.playing &&  this.state.phand[3] && <img src = {this.state.phand[3].image}/>}\n          {this.state.playing &&  this.state.phand[4] && <img src = {this.state.phand[4].image}/>}\n          {this.state.playing &&  this.state.phand[5] && <img src = {this.state.phand[5].image}/>}\n          {this.state.playing &&  this.state.phand[6] && <img src = {this.state.phand[6].image}/>}\n          {this.state.playing &&  this.state.phand[7] && <img src = {this.state.phand[7].image}/>}\n          {this.state.playing &&  this.state.phand[8] && <img src = {this.state.phand[8].image}/>}\n          {this.state.playing &&  this.state.phand[9] && <img src = {this.state.phand[9].image}/>}\n          {this.state.playing &&  this.state.phand[10] && <img src = {this.state.phand[10].image}/>}\n          </body>\n        </div>\n        \n        <div style = {{padding: 25, backgroundcolor: \"#121212\"}}> </div>       \n\n        <div style = {{backroundColor: \"#121212\", padding: 10}}> {this.state.playing && <Button type =\"primary\" style = {{background : \"#BB86FC\", borderColor: \"#BB86FC\"}} size = \"large\" shape = \"round\" onClick = {()=> {this.hit()}}> Hit </Button>} {this.state.playing && <Button type =\"primary\" style = {{background : \"#03DAC6\", borderColor: \"#03DAC6\"}} size = \"large\" shape = \"round\" onClick = {()=> {this.stand()}}> Stand </Button>}  </div>\n\n        <div style = {{padding: 25, backgroundcolor: \"#121212\"}}> </div>\n\n        <div style = {{padding: 5, backgroundcolor: \"#121212\"}}>\n          <body style = {{backgroundColor : \"#121212\"}}>  \n          {this.state.playing && <img src = {this.state.dhand[0].image}/>}\n          {this.state.playing &&  this.state.dhand[1] && <img src = {this.state.dhand[1].image}/>}\n          {this.state.playing &&  this.state.dhand[2] && <img src = {this.state.dhand[2].image}/>}\n          {this.state.playing &&  this.state.dhand[3] && <img src = {this.state.dhand[3].image}/>}\n          {this.state.playing &&  this.state.dhand[4] && <img src = {this.state.dhand[4].image}/>}\n          {this.state.playing &&  this.state.dhand[5] && <img src = {this.state.dhand[5].image}/>}\n          {this.state.playing &&  this.state.dhand[6] && <img src = {this.state.dhand[6].image}/>}\n          {this.state.playing &&  this.state.dhand[7] && <img src = {this.state.dhand[7].image}/>}\n          {this.state.playing &&  this.state.dhand[8] && <img src = {this.state.dhand[8].image}/>}\n          {this.state.playing &&  this.state.dhand[9] && <img src = {this.state.dhand[9].image}/>}\n          {this.state.playing &&  this.state.dhand[10] && <img src = {this.state.dhand[10].image}/>}\n          </body>\n        </div>\n\n         <div style = {{backgroundColor: '#121212'}}>\n           <body style = {{color : \"#bebebe\",fontWeight : \"bold\", backroundColor: \"#121212\", padding : 5}}> {this.state.playing && this.state.dw} {this.state.playing && this.state.dwins} </body>\n        </div>\n        \n      </div> \n\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}